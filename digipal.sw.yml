components:
    schemas:
        AbstractResponseAziendaDTO:
            properties:
                codeError:
                    format: int32
                    type: integer
                descError:
                    type: string
                dto:
                    $ref: '#/components/schemas/AziendaDTO'
                first:
                    format: int32
                    type: integer
                list:
                    items:
                        $ref: '#/components/schemas/AziendaDTO'
                    type: array
                pageNumber:
                    format: int32
                    type: integer
                totalPages:
                    format: int32
                    type: integer
                totalRecords:
                    format: int64
                    type: integer
            type: object
        AbstractResponseCompravenditaDTO:
            properties:
                codeError:
                    format: int32
                    type: integer
                descError:
                    type: string
                dto:
                    $ref: '#/components/schemas/CompravenditaDTO'
                first:
                    format: int32
                    type: integer
                list:
                    items:
                        $ref: '#/components/schemas/CompravenditaDTO'
                    type: array
                pageNumber:
                    format: int32
                    type: integer
                totalPages:
                    format: int32
                    type: integer
                totalRecords:
                    format: int64
                    type: integer
            type: object
        AbstractResponseComuneDTO:
            properties:
                codeError:
                    format: int32
                    type: integer
                descError:
                    type: string
                dto:
                    $ref: '#/components/schemas/ComuneDTO'
                first:
                    format: int32
                    type: integer
                list:
                    items:
                        $ref: '#/components/schemas/ComuneDTO'
                    type: array
                pageNumber:
                    format: int32
                    type: integer
                totalPages:
                    format: int32
                    type: integer
                totalRecords:
                    format: int64
                    type: integer
            type: object
        AbstractResponseRuoliUtenteDTO:
            properties:
                codeError:
                    format: int32
                    type: integer
                descError:
                    type: string
                dto:
                    $ref: '#/components/schemas/RuoliUtenteDTO'
                first:
                    format: int32
                    type: integer
                list:
                    items:
                        $ref: '#/components/schemas/RuoliUtenteDTO'
                    type: array
                pageNumber:
                    format: int32
                    type: integer
                totalPages:
                    format: int32
                    type: integer
                totalRecords:
                    format: int64
                    type: integer
            type: object
        AbstractResponseSedeDTO:
            properties:
                codeError:
                    format: int32
                    type: integer
                descError:
                    type: string
                dto:
                    $ref: '#/components/schemas/SedeDTO'
                first:
                    format: int32
                    type: integer
                list:
                    items:
                        $ref: '#/components/schemas/SedeDTO'
                    type: array
                pageNumber:
                    format: int32
                    type: integer
                totalPages:
                    format: int32
                    type: integer
                totalRecords:
                    format: int64
                    type: integer
            type: object
        AbstractResponseSedeTicketInfoDTO:
            properties:
                codeError:
                    format: int32
                    type: integer
                descError:
                    type: string
                dto:
                    $ref: '#/components/schemas/SedeTicketInfoDTO'
                first:
                    format: int32
                    type: integer
                list:
                    items:
                        $ref: '#/components/schemas/SedeTicketInfoDTO'
                    type: array
                pageNumber:
                    format: int32
                    type: integer
                totalPages:
                    format: int32
                    type: integer
                totalRecords:
                    format: int64
                    type: integer
            type: object
        AbstractResponseTicketDTO:
            properties:
                codeError:
                    format: int32
                    type: integer
                descError:
                    type: string
                dto:
                    $ref: '#/components/schemas/TicketDTO'
                first:
                    format: int32
                    type: integer
                list:
                    items:
                        $ref: '#/components/schemas/TicketDTO'
                    type: array
                pageNumber:
                    format: int32
                    type: integer
                totalPages:
                    format: int32
                    type: integer
                totalRecords:
                    format: int64
                    type: integer
            type: object
        AuthRequest:
            description: Authentication request containing user's credentials
            properties:
                password:
                    description: Password of the user
                    example: securePassword123
                    type: string
                username:
                    description: Username of the user
                    example: john_doe
                    type: string
            type: object
        Azienda:
            properties:
                id:
                    format: int32
                    type: integer
                indirizzo:
                    type: string
                partitaIva:
                    type: string
                provvisoria:
                    type: boolean
                ragioneSociale:
                    type: string
                sedi:
                    items:
                        $ref: '#/components/schemas/Sede'
                    type: array
                    uniqueItems: true
                ticketSet:
                    items:
                        $ref: '#/components/schemas/Ticket'
                    type: array
                    uniqueItems: true
                ticketSet1:
                    items:
                        $ref: '#/components/schemas/Ticket'
                    type: array
                    uniqueItems: true
                ticketSet2:
                    items:
                        $ref: '#/components/schemas/Ticket'
                    type: array
                    uniqueItems: true
                ticketSet3:
                    items:
                        $ref: '#/components/schemas/Ticket'
                    type: array
                    uniqueItems: true
                ticketSet4:
                    items:
                        $ref: '#/components/schemas/Ticket'
                    type: array
                    uniqueItems: true
                utentiSet:
                    items:
                        $ref: '#/components/schemas/Utente'
                    type: array
                    uniqueItems: true
            type: object
        AziendaDTO:
            properties:
                id:
                    format: int32
                    type: integer
                indirizzo:
                    type: string
                partitaIva:
                    type: string
                provvisoria:
                    type: boolean
                ragioneSociale:
                    type: string
                sedi:
                    items:
                        $ref: '#/components/schemas/SedeDTO'
                    type: array
            type: object
        ChangePasswordRequest:
            properties:
                checkNewPassword:
                    type: string
                newPassword:
                    type: string
                oldPassword:
                    type: string
            type: object
        Compravendita:
            properties:
                capArrivo:
                    type: string
                capMittenteProvvisorio:
                    type: string
                capPartenza:
                    type: string
                codiceAziendaAcquirente:
                    $ref: '#/components/schemas/Azienda'
                codiceAziendaDestinatario:
                    $ref: '#/components/schemas/Azienda'
                codiceAziendaInserimento:
                    $ref: '#/components/schemas/Azienda'
                codiceAziendaMittente:
                    $ref: '#/components/schemas/Azienda'
                codiceAziendaProprietario:
                    $ref: '#/components/schemas/Azienda'
                codiceAziendaVenditore:
                    $ref: '#/components/schemas/Azienda'
                codiceComuneArrivo:
                    $ref: '#/components/schemas/Comune'
                codiceComuneMittenteProvvisoria:
                    $ref: '#/components/schemas/Comune'
                codiceComunePartenza:
                    $ref: '#/components/schemas/Comune'
                codiceProvinciaMittenteProvvisoria:
                    $ref: '#/components/schemas/Provincia'
                codiceTicket:
                    type: string
                codiceTicketVersione:
                    format: int64
                    type: integer
                codiceUtenteAccettazione:
                    $ref: '#/components/schemas/Utente'
                codiceUtenteOperazione:
                    $ref: '#/components/schemas/Utente'
                codiceVettoreArrivo:
                    $ref: '#/components/schemas/Vettore'
                codiceVettorePartenza:
                    $ref: '#/components/schemas/Vettore'
                cognomeTrasportatore:
                    type: string
                cognomeUtenteAccettazione:
                    type: string
                cognomeUtenteOperazione:
                    type: string
                croBonifico:
                    type: string
                dataConsegna:
                    format: date-time
                    type: string
                dataEmissioneDDT:
                    format: date-time
                    type: string
                dataOraAccettazione:
                    format: date-time
                    type: string
                dataOraInserimento:
                    format: date-time
                    type: string
                dataOraPagamento:
                    format: date-time
                    type: string
                dataPartenza:
                    format: date-time
                    type: string
                dettaglioArrivo:
                    type: string
                dettaglioPartenza:
                    type: string
                disponibilePerLaVendita:
                    type: boolean
                flagContrattoAcquirente:
                    type: boolean
                flagContrattoVenditore:
                    type: boolean
                id:
                    format: int32
                    type: integer
                idCompravendita:
                    type: string
                idSedeDestinatario:
                    $ref: '#/components/schemas/Sede'
                idSedeMittente:
                    $ref: '#/components/schemas/Sede'
                idSedeProprietaria:
                    $ref: '#/components/schemas/Sede'
                idTicket:
                    $ref: '#/components/schemas/Ticket'
                idTicketSistemaTerzo:
                    type: string
                importoTicket:
                    type: number
                indirizzoArrivo:
                    type: string
                indirizzoMittenteProvvisorio:
                    type: string
                indirizzoPartenza:
                    type: string
                latitudineArrivo:
                    type: number
                localitaArrivo:
                    type: string
                localitaPartenza:
                    type: string
                longitudineArrivo:
                    type: number
                nomeTrasportatore:
                    type: string
                nomeUtenteAccettazione:
                    type: string
                nomeUtenteOperazione:
                    type: string
                noteOperativeDestinatario:
                    type: string
                noteOperativeMittente:
                    type: string
                numTelUtenteAccettazione:
                    type: string
                numTelUtenteOperazione:
                    type: string
                numeroDDT:
                    type: string
                otp:
                    type: string
                partitaIvaMittenteProvvisoria:
                    type: string
                partitaIvaVettoreArrivo:
                    type: string
                partitaIvaVettorePartenza:
                    type: string
                prezzoUnitarioIIIScelta:
                    type: number
                prezzoUnitarioIIScelta:
                    type: number
                prezzoUnitarioIScelta:
                    type: number
                prezzoUnitarioNuovo:
                    type: number
                qtaIIIScelta:
                    format: int32
                    type: integer
                qtaIIISceltaAccettata:
                    format: int32
                    type: integer
                qtaIIScelta:
                    format: int32
                    type: integer
                qtaIISceltaAccettata:
                    format: int32
                    type: integer
                qtaIScelta:
                    format: int32
                    type: integer
                qtaISceltaAccettata:
                    format: int32
                    type: integer
                qtaNuovo:
                    format: int32
                    type: integer
                qtaNuovoAccettata:
                    format: int32
                    type: integer
                ragioneSocialeVettoreArrivo:
                    type: string
                ragioneSocialeVettorePartenza:
                    type: string
                statoTicket:
                    type: string
                targaMezzo:
                    type: string
                targaRimorchio:
                    type: string
                telefonoTrasportatore:
                    type: string
                ticketProvvisorio:
                    type: boolean
                tipoPallet:
                    $ref: '#/components/schemas/TipoPallet'
                tipoTicket:
                    type: string
                tokenCompravendita:
                    type: string
                versione:
                    format: int64
                    type: integer
            type: object
        CompravenditaDTO:
            properties:
                capArrivo:
                    type: string
                capMittenteProvvisorio:
                    type: string
                capPartenza:
                    type: string
                codiceAziendaAcquirente:
                    $ref: '#/components/schemas/AziendaDTO'
                codiceAziendaDestinatario:
                    $ref: '#/components/schemas/AziendaDTO'
                codiceAziendaInserimento:
                    $ref: '#/components/schemas/AziendaDTO'
                codiceAziendaMittente:
                    $ref: '#/components/schemas/AziendaDTO'
                codiceAziendaProprietario:
                    $ref: '#/components/schemas/AziendaDTO'
                codiceAziendaVenditore:
                    $ref: '#/components/schemas/AziendaDTO'
                codiceComuneArrivo:
                    $ref: '#/components/schemas/ComuneDTO'
                codiceComuneMittenteProvvisoria:
                    $ref: '#/components/schemas/ComuneDTO'
                codiceComunePartenza:
                    $ref: '#/components/schemas/ComuneDTO'
                codiceProvinciaMittenteProvvisoria:
                    $ref: '#/components/schemas/ProvinciaDTO'
                codiceTicket:
                    type: string
                codiceTicketVersione:
                    format: int64
                    type: integer
                codiceUtenteAccettazione:
                    $ref: '#/components/schemas/UtenteDTO'
                codiceUtenteOperazione:
                    $ref: '#/components/schemas/UtenteDTO'
                codiceVettoreArrivo:
                    $ref: '#/components/schemas/VettoreDTO'
                codiceVettorePartenza:
                    $ref: '#/components/schemas/VettoreDTO'
                cognomeTrasportatore:
                    type: string
                cognomeUtenteAccettazione:
                    type: string
                cognomeUtenteOperazione:
                    type: string
                croBonifico:
                    type: string
                dataConsegna:
                    format: date-time
                    type: string
                dataEmissioneDDT:
                    format: date-time
                    type: string
                dataOraAccettazione:
                    format: date-time
                    type: string
                dataOraInserimento:
                    format: date-time
                    type: string
                dataOraPagamento:
                    format: date-time
                    type: string
                dataPartenza:
                    format: date-time
                    type: string
                dettaglioArrivo:
                    type: string
                dettaglioPartenza:
                    type: string
                disponibilePerLaVendita:
                    type: boolean
                flagContrattoAcquirente:
                    type: boolean
                flagContrattoVenditore:
                    type: boolean
                id:
                    format: int32
                    type: integer
                idCompravendita:
                    type: string
                idSedeDestinatario:
                    $ref: '#/components/schemas/SedeDTO'
                idSedeMittente:
                    $ref: '#/components/schemas/SedeDTO'
                idSedeProprietaria:
                    $ref: '#/components/schemas/Sede'
                idTicket:
                    $ref: '#/components/schemas/TicketDTO'
                idTicketSistemaTerzo:
                    type: string
                importoTicket:
                    type: number
                indirizzoArrivo:
                    type: string
                indirizzoMittenteProvvisorio:
                    type: string
                indirizzoPartenza:
                    type: string
                latitudineArrivo:
                    type: number
                localitaArrivo:
                    type: string
                localitaPartenza:
                    type: string
                longitudineArrivo:
                    type: number
                nomeTrasportatore:
                    type: string
                nomeUtenteAccettazione:
                    type: string
                nomeUtenteOperazione:
                    type: string
                noteOperativeDestinatario:
                    type: string
                noteOperativeMittente:
                    type: string
                numTelUtenteAccettazione:
                    type: string
                numTelUtenteOperazione:
                    type: string
                numeroDDT:
                    type: string
                otp:
                    type: string
                partitaIvaMittenteProvvisoria:
                    type: string
                partitaIvaVettoreArrivo:
                    type: string
                partitaIvaVettorePartenza:
                    type: string
                prezzoUnitarioIIIScelta:
                    type: number
                prezzoUnitarioIIScelta:
                    type: number
                prezzoUnitarioIScelta:
                    type: number
                prezzoUnitarioNuovo:
                    type: number
                qtaIIIScelta:
                    format: int32
                    type: integer
                qtaIIISceltaAccettata:
                    format: int32
                    type: integer
                qtaIIScelta:
                    format: int32
                    type: integer
                qtaIISceltaAccettata:
                    format: int32
                    type: integer
                qtaIScelta:
                    format: int32
                    type: integer
                qtaISceltaAccettata:
                    format: int32
                    type: integer
                qtaNuovo:
                    format: int32
                    type: integer
                qtaNuovoAccettata:
                    format: int32
                    type: integer
                ragioneSocialeVettoreArrivo:
                    type: string
                ragioneSocialeVettorePartenza:
                    type: string
                statoTicket:
                    type: string
                targaMezzo:
                    type: string
                targaRimorchio:
                    type: string
                telefonoTrasportatore:
                    type: string
                ticketProvvisorio:
                    type: boolean
                tipoPallet:
                    $ref: '#/components/schemas/TipoPalletDTO'
                tipoTicket:
                    type: string
                tokenCompravendita:
                    type: string
                versione:
                    format: int64
                    type: integer
            type: object
        CompravenditaResponse:
            properties:
                codeError:
                    format: int32
                    type: integer
                descError:
                    type: string
                dto:
                    $ref: '#/components/schemas/CompravenditaDTO'
                first:
                    format: int32
                    type: integer
                list:
                    items:
                        $ref: '#/components/schemas/CompravenditaDTO'
                    type: array
                pageNumber:
                    format: int32
                    type: integer
                totalPages:
                    format: int32
                    type: integer
                totalRecords:
                    format: int64
                    type: integer
            type: object
        Comune:
            properties:
                cap:
                    type: string
                cf:
                    format: int64
                    type: integer
                codiceIstat:
                    format: int32
                    type: integer
                codiceIstatRegione:
                    format: int32
                    type: integer
                comune:
                    type: string
                id:
                    format: int32
                    type: integer
                latitudine:
                    type: number
                longitudine:
                    type: number
                mail:
                    type: string
                nazione:
                    $ref: '#/components/schemas/Nazione'
                pec:
                    type: string
                provincia:
                    $ref: '#/components/schemas/Provincia'
                regione:
                    type: string
                sigla:
                    type: string
                sitoWeb:
                    type: string
                stemma:
                    type: string
                wikipedia:
                    type: string
            type: object
        ComuneDTO:
            properties:
                cap:
                    type: string
                cf:
                    format: int64
                    type: integer
                codiceIstat:
                    format: int32
                    type: integer
                codiceIstatRegione:
                    format: int32
                    type: integer
                comune:
                    type: string
                id:
                    format: int32
                    type: integer
                latitudine:
                    type: number
                longitudine:
                    type: number
                mail:
                    type: string
                nazione:
                    $ref: '#/components/schemas/NazioneDTO'
                pec:
                    type: string
                provincia:
                    $ref: '#/components/schemas/ProvinciaDTO'
                regione:
                    type: string
                sigla:
                    type: string
                sitoWeb:
                    type: string
                stemma:
                    type: string
                wikipedia:
                    type: string
            type: object
        ErrorResponse:
            properties:
                codeError:
                    format: int32
                    type: integer
                descError:
                    type: string
                dto:
                    type: string
                first:
                    format: int32
                    type: integer
                list:
                    items:
                        type: string
                    type: array
                pageNumber:
                    format: int32
                    type: integer
                totalPages:
                    format: int32
                    type: integer
                totalRecords:
                    format: int64
                    type: integer
            type: object
        Nazione:
            properties:
                codiceNazione:
                    type: string
                descrizioneNazione:
                    type: string
                id:
                    format: int32
                    type: integer
                provinceSet:
                    items:
                        $ref: '#/components/schemas/Provincia'
                    type: array
                    uniqueItems: true
            type: object
        NazioneDTO:
            properties:
                codiceNazione:
                    type: string
                descrizioneNazione:
                    type: string
                id:
                    format: int32
                    type: integer
            type: object
        NewPinRequest:
            properties:
                newPin:
                    type: string
            type: object
        NewPinResponse:
            properties:
                codeError:
                    format: int32
                    type: integer
                descError:
                    type: string
                dto:
                    type: string
                first:
                    format: int32
                    type: integer
                list:
                    items:
                        type: string
                    type: array
                otp:
                    type: string
                pageNumber:
                    format: int32
                    type: integer
                totalPages:
                    format: int32
                    type: integer
                totalRecords:
                    format: int64
                    type: integer
            type: object
        PageDtoAziendaDTO:
            properties:
                content:
                    items:
                        $ref: '#/components/schemas/AziendaDTO'
                    type: array
                dataOraAttuale:
                    format: date-time
                    type: string
                hasNext:
                    type: boolean
                hasPrevious:
                    type: boolean
                offset:
                    format: int64
                    type: integer
                pageNumber:
                    format: int32
                    type: integer
                pageSize:
                    format: int32
                    type: integer
                response:
                    $ref: '#/components/schemas/AbstractResponseAziendaDTO'
                totalElements:
                    format: int64
                    type: integer
                totalPages:
                    format: int32
                    type: integer
            type: object
        PageDtoCompravenditaDTO:
            properties:
                content:
                    items:
                        $ref: '#/components/schemas/CompravenditaDTO'
                    type: array
                dataOraAttuale:
                    format: date-time
                    type: string
                hasNext:
                    type: boolean
                hasPrevious:
                    type: boolean
                offset:
                    format: int64
                    type: integer
                pageNumber:
                    format: int32
                    type: integer
                pageSize:
                    format: int32
                    type: integer
                response:
                    $ref: '#/components/schemas/AbstractResponseCompravenditaDTO'
                totalElements:
                    format: int64
                    type: integer
                totalPages:
                    format: int32
                    type: integer
            type: object
        PageDtoComuneDTO:
            properties:
                content:
                    items:
                        $ref: '#/components/schemas/ComuneDTO'
                    type: array
                dataOraAttuale:
                    format: date-time
                    type: string
                hasNext:
                    type: boolean
                hasPrevious:
                    type: boolean
                offset:
                    format: int64
                    type: integer
                pageNumber:
                    format: int32
                    type: integer
                pageSize:
                    format: int32
                    type: integer
                response:
                    $ref: '#/components/schemas/AbstractResponseComuneDTO'
                totalElements:
                    format: int64
                    type: integer
                totalPages:
                    format: int32
                    type: integer
            type: object
        PageDtoRuoliUtenteDTO:
            properties:
                content:
                    items:
                        $ref: '#/components/schemas/RuoliUtenteDTO'
                    type: array
                dataOraAttuale:
                    format: date-time
                    type: string
                hasNext:
                    type: boolean
                hasPrevious:
                    type: boolean
                offset:
                    format: int64
                    type: integer
                pageNumber:
                    format: int32
                    type: integer
                pageSize:
                    format: int32
                    type: integer
                response:
                    $ref: '#/components/schemas/AbstractResponseRuoliUtenteDTO'
                totalElements:
                    format: int64
                    type: integer
                totalPages:
                    format: int32
                    type: integer
            type: object
        PageDtoSedeDTO:
            properties:
                content:
                    items:
                        $ref: '#/components/schemas/SedeDTO'
                    type: array
                dataOraAttuale:
                    format: date-time
                    type: string
                hasNext:
                    type: boolean
                hasPrevious:
                    type: boolean
                offset:
                    format: int64
                    type: integer
                pageNumber:
                    format: int32
                    type: integer
                pageSize:
                    format: int32
                    type: integer
                response:
                    $ref: '#/components/schemas/AbstractResponseSedeDTO'
                totalElements:
                    format: int64
                    type: integer
                totalPages:
                    format: int32
                    type: integer
            type: object
        PageDtoSedeTicketInfoDTO:
            properties:
                content:
                    items:
                        $ref: '#/components/schemas/SedeTicketInfoDTO'
                    type: array
                dataOraAttuale:
                    format: date-time
                    type: string
                hasNext:
                    type: boolean
                hasPrevious:
                    type: boolean
                offset:
                    format: int64
                    type: integer
                pageNumber:
                    format: int32
                    type: integer
                pageSize:
                    format: int32
                    type: integer
                response:
                    $ref: '#/components/schemas/AbstractResponseSedeTicketInfoDTO'
                totalElements:
                    format: int64
                    type: integer
                totalPages:
                    format: int32
                    type: integer
            type: object
        PageDtoTicketDTO:
            properties:
                content:
                    items:
                        $ref: '#/components/schemas/TicketDTO'
                    type: array
                dataOraAttuale:
                    format: date-time
                    type: string
                hasNext:
                    type: boolean
                hasPrevious:
                    type: boolean
                offset:
                    format: int64
                    type: integer
                pageNumber:
                    format: int32
                    type: integer
                pageSize:
                    format: int32
                    type: integer
                response:
                    $ref: '#/components/schemas/AbstractResponseTicketDTO'
                totalElements:
                    format: int64
                    type: integer
                totalPages:
                    format: int32
                    type: integer
            type: object
        Pageable:
            properties:
                page:
                    format: int32
                    minimum: 0
                    type: integer
                size:
                    format: int32
                    minimum: 1
                    type: integer
                sort:
                    items:
                        type: string
                    type: array
            type: object
        Path:
            properties:
                httpMethod:
                    type: string
                id:
                    format: int32
                    type: integer
                path:
                    type: string
                permitAll:
                    type: boolean
                ruoloSet:
                    items:
                        $ref: '#/components/schemas/Ruolo'
                    type: array
                    uniqueItems: true
            type: object
        PinCodeVerificationRequest:
            properties:
                phoneNumber:
                    type: string
                pinCode:
                    type: string
            type: object
        PinCodeVerificationResponse:
            properties:
                checkedValue:
                    type: boolean
                codeError:
                    format: int32
                    type: integer
                descError:
                    type: string
                dto:
                    type: boolean
                first:
                    format: int32
                    type: integer
                list:
                    items:
                        type: boolean
                    type: array
                pageNumber:
                    format: int32
                    type: integer
                totalPages:
                    format: int32
                    type: integer
                totalRecords:
                    format: int64
                    type: integer
            type: object
        Provincia:
            properties:
                codiceNazione:
                    $ref: '#/components/schemas/Nazione'
                codiceProvincia:
                    type: string
                descrizioneProvincia:
                    type: string
                id:
                    format: int32
                    type: integer
            type: object
        ProvinciaDTO:
            properties:
                codiceNazione:
                    $ref: '#/components/schemas/NazioneDTO'
                codiceProvincia:
                    type: string
                descrizioneProvincia:
                    type: string
                id:
                    format: int32
                    type: integer
            type: object
        RSUTDTO:
            properties:
                aziendaId:
                    format: int64
                    type: integer
                phoneNumber:
                    type: string
            type: object
        RecoverPasswordRequest:
            properties:
                confirmPassword:
                    type: string
                passwordNew:
                    type: string
            type: object
        RecoverPasswordResponse:
            properties:
                codeError:
                    format: int32
                    type: integer
                descError:
                    type: string
                dto:
                    $ref: '#/components/schemas/UtenteDTO'
                first:
                    format: int32
                    type: integer
                list:
                    items:
                        $ref: '#/components/schemas/UtenteDTO'
                    type: array
                otp:
                    type: string
                pageNumber:
                    format: int32
                    type: integer
                totalPages:
                    format: int32
                    type: integer
                totalRecords:
                    format: int64
                    type: integer
            type: object
        RegisterRequest:
            description: Request containing the phone number, password, and PIN code for user registration
            properties:
                password:
                    description: Password for the user account
                    example: SecurePassword123!
                    type: string
                phoneNumber:
                    description: Phone number of the user
                    example: "+1234567890"
                    type: string
                pinCode:
                    description: PIN code for the user account
                    example: "1234"
                    type: string
            type: object
        RegisterResponse:
            properties:
                codeError:
                    format: int32
                    type: integer
                descError:
                    type: string
                dto:
                    $ref: '#/components/schemas/UtenteDTO'
                first:
                    format: int32
                    type: integer
                list:
                    items:
                        $ref: '#/components/schemas/UtenteDTO'
                    type: array
                otp:
                    type: string
                pageNumber:
                    format: int32
                    type: integer
                password:
                    type: string
                    writeOnly: true
                pinCode:
                    type: string
                    writeOnly: true
                ruoli:
                    items:
                        $ref: '#/components/schemas/RuoloDTO'
                    type: array
                totalPages:
                    format: int32
                    type: integer
                totalRecords:
                    format: int64
                    type: integer
            type: object
        ResetPasswordRequest:
            properties:
                checkNewPassword:
                    type: string
                newPassword:
                    type: string
                numeroTelefono:
                    type: string
                token:
                    type: string
            type: object
        RuoliUtente:
            properties:
                codiceRuolo:
                    $ref: '#/components/schemas/Ruolo'
                codiceUtente:
                    $ref: '#/components/schemas/Utente'
                id:
                    format: int32
                    type: integer
            type: object
        RuoliUtenteDTO:
            properties:
                id:
                    format: int32
                    type: integer
                ruolo:
                    $ref: '#/components/schemas/RuoloDTO'
                utente:
                    $ref: '#/components/schemas/UtenteDTO'
            type: object
        Ruolo:
            properties:
                descrizione:
                    type: string
                id:
                    format: int32
                    type: integer
                pathsSet:
                    items:
                        $ref: '#/components/schemas/Path'
                    type: array
                    uniqueItems: true
                ruoloUtentiSet:
                    items:
                        $ref: '#/components/schemas/RuoliUtente'
                    type: array
                    uniqueItems: true
            type: object
        RuoloAssignedRequest:
            properties:
                first:
                    format: int32
                    type: integer
                pageNumber:
                    format: int32
                    type: integer
                recordPerPage:
                    format: int32
                    type: integer
                ruoli:
                    items:
                        $ref: '#/components/schemas/RuoloDTO'
                    type: array
                utente:
                    $ref: '#/components/schemas/UtenteDTO'
            type: object
        RuoloAssignedResponse:
            properties:
                codeError:
                    format: int32
                    type: integer
                descError:
                    type: string
                dto:
                    $ref: '#/components/schemas/RuoliUtenteDTO'
                first:
                    format: int32
                    type: integer
                list:
                    items:
                        $ref: '#/components/schemas/RuoliUtenteDTO'
                    type: array
                pageNumber:
                    format: int32
                    type: integer
                ruoli:
                    items:
                        $ref: '#/components/schemas/RuoliUtenteDTO'
                    type: array
                totalPages:
                    format: int32
                    type: integer
                totalRecords:
                    format: int64
                    type: integer
                utente:
                    $ref: '#/components/schemas/UtenteDTO'
            type: object
        RuoloDTO:
            properties:
                descrizione:
                    type: string
                id:
                    format: int32
                    type: integer
            type: object
        RuoloResponse:
            properties:
                codeError:
                    format: int32
                    type: integer
                descError:
                    type: string
                dto:
                    $ref: '#/components/schemas/RuoloDTO'
                first:
                    format: int32
                    type: integer
                list:
                    items:
                        $ref: '#/components/schemas/RuoloDTO'
                    type: array
                pageNumber:
                    format: int32
                    type: integer
                totalPages:
                    format: int32
                    type: integer
                totalRecords:
                    format: int64
                    type: integer
            type: object
        Sede:
            properties:
                azienda:
                    $ref: '#/components/schemas/Azienda'
                cap:
                    type: string
                compravenditeSedeDestinatario:
                    items:
                        $ref: '#/components/schemas/Compravendita'
                    type: array
                    uniqueItems: true
                compravenditeSedeMittente:
                    items:
                        $ref: '#/components/schemas/Compravendita'
                    type: array
                    uniqueItems: true
                comune:
                    $ref: '#/components/schemas/Comune'
                id:
                    format: int32
                    type: integer
                indirizzo:
                    type: string
                latitudine:
                    format: double
                    type: number
                localita:
                    type: string
                longitudine:
                    format: double
                    type: number
                sedeProprietaria:
                    items:
                        $ref: '#/components/schemas/Ticket'
                    type: array
                    uniqueItems: true
                ticketsSedeDestinatario:
                    items:
                        $ref: '#/components/schemas/Ticket'
                    type: array
                    uniqueItems: true
                ticketsSedeMittente:
                    items:
                        $ref: '#/components/schemas/Ticket'
                    type: array
                    uniqueItems: true
                utenti:
                    items:
                        $ref: '#/components/schemas/Utente'
                    type: array
                    uniqueItems: true
            type: object
        SedeDTO:
            properties:
                azienda:
                    $ref: '#/components/schemas/AziendaDTO'
                cap:
                    type: string
                comune:
                    $ref: '#/components/schemas/ComuneDTO'
                id:
                    format: int32
                    type: integer
                indirizzo:
                    type: string
                latitudine:
                    format: double
                    type: number
                localita:
                    type: string
                longitudine:
                    format: double
                    type: number
            type: object
        SedeTicketInfoDTO:
            properties:
                cap:
                    type: string
                distanzaKm:
                    format: double
                    type: number
                idSede:
                    format: int64
                    type: integer
                indirizzo:
                    type: string
                latitudine:
                    format: double
                    type: number
                localita:
                    type: string
                longitudine:
                    format: double
                    type: number
                numeroTickets:
                    format: int64
                    type: integer
            type: object
        Ticket:
            properties:
                capArrivo:
                    type: string
                capMittenteProvvisorio:
                    type: string
                capPartenza:
                    type: string
                codiceAziendaAcquirente:
                    $ref: '#/components/schemas/Azienda'
                codiceAziendaDestinatario:
                    $ref: '#/components/schemas/Azienda'
                codiceAziendaInserimento:
                    $ref: '#/components/schemas/Azienda'
                codiceAziendaMittente:
                    $ref: '#/components/schemas/Azienda'
                codiceAziendaProprietario:
                    $ref: '#/components/schemas/Azienda'
                codiceAziendaVenditore:
                    $ref: '#/components/schemas/Azienda'
                codiceComuneArrivo:
                    $ref: '#/components/schemas/Comune'
                codiceComuneMittenteProvvisoria:
                    $ref: '#/components/schemas/Comune'
                codiceComunePartenza:
                    $ref: '#/components/schemas/Comune'
                codiceProvinciaMittenteProvvisoria:
                    $ref: '#/components/schemas/Provincia'
                codiceTicket:
                    type: string
                codiceUtenteAccettazione:
                    $ref: '#/components/schemas/Utente'
                codiceUtenteOperazione:
                    $ref: '#/components/schemas/Utente'
                codiceVettoreArrivo:
                    $ref: '#/components/schemas/Vettore'
                codiceVettorePartenza:
                    $ref: '#/components/schemas/Vettore'
                cognomeTrasportatore:
                    type: string
                cognomeUtenteAccettazione:
                    type: string
                cognomeUtenteOperazione:
                    type: string
                croBonifico:
                    type: string
                dataConsegna:
                    format: date-time
                    type: string
                dataEmissioneDDT:
                    format: date-time
                    type: string
                dataOraAccettazione:
                    format: date-time
                    type: string
                dataOraInserimento:
                    format: date-time
                    type: string
                dataOraPagamento:
                    format: date-time
                    type: string
                dataPartenza:
                    format: date-time
                    type: string
                dettaglioArrivo:
                    type: string
                dettaglioPartenza:
                    type: string
                disponibilePerLaVendita:
                    type: boolean
                flagContrattoCompravenditaAcquirente:
                    type: boolean
                flagContrattoCompravenditaVenditore:
                    type: boolean
                id:
                    format: int32
                    type: integer
                idSedeDestinatario:
                    $ref: '#/components/schemas/Sede'
                idSedeMittente:
                    $ref: '#/components/schemas/Sede'
                idSedeProprietaria:
                    $ref: '#/components/schemas/Sede'
                idTicketSistemaTerzo:
                    type: string
                importoTicket:
                    type: number
                indirizzoArrivo:
                    type: string
                indirizzoMittenteProvvisorio:
                    type: string
                indirizzoPartenza:
                    type: string
                latitudineArrivo:
                    type: number
                localitaArrivo:
                    type: string
                localitaPartenza:
                    type: string
                longitudineArrivo:
                    type: number
                nomeTrasportatore:
                    type: string
                nomeUtenteAccettazione:
                    type: string
                nomeUtenteOperazione:
                    type: string
                noteOperativeDestinatario:
                    type: string
                noteOperativeMittente:
                    type: string
                numTelUtenteAccettazione:
                    type: string
                numTelUtenteOperazione:
                    type: string
                numeroDDT:
                    type: string
                otp:
                    type: string
                partitaIvaMittenteProvvisoria:
                    type: string
                partitaIvaVettoreArrivo:
                    type: string
                partitaIvaVettorePartenza:
                    type: string
                prezzoUnitarioIIIScelta:
                    type: number
                prezzoUnitarioIIScelta:
                    type: number
                prezzoUnitarioIScelta:
                    type: number
                prezzoUnitarioNuovo:
                    type: number
                qtaIIIScelta:
                    format: int32
                    type: integer
                qtaIIISceltaAccettata:
                    format: int32
                    type: integer
                qtaIIScelta:
                    format: int32
                    type: integer
                qtaIISceltaAccettata:
                    format: int32
                    type: integer
                qtaIScelta:
                    format: int32
                    type: integer
                qtaISceltaAccettata:
                    format: int32
                    type: integer
                qtaNuovo:
                    format: int32
                    type: integer
                qtaNuovoAccettata:
                    format: int32
                    type: integer
                ragioneSocialeVettoreArrivo:
                    type: string
                ragioneSocialeVettorePartenza:
                    type: string
                statoTicket:
                    type: string
                targaMezzo:
                    type: string
                targaRimorchio:
                    type: string
                telefonoTrasportatore:
                    type: string
                ticketProvvisorio:
                    type: boolean
                tipoPallet:
                    $ref: '#/components/schemas/TipoPallet'
                tipoTicket:
                    type: string
                versione:
                    format: int64
                    type: integer
            type: object
        TicketDTO:
            properties:
                capArrivo:
                    type: string
                capMittenteProvvisorio:
                    type: string
                capPartenza:
                    type: string
                codiceAziendaAcquirente:
                    $ref: '#/components/schemas/AziendaDTO'
                codiceAziendaDestinatario:
                    $ref: '#/components/schemas/AziendaDTO'
                codiceAziendaInserimento:
                    $ref: '#/components/schemas/AziendaDTO'
                codiceAziendaMittente:
                    $ref: '#/components/schemas/AziendaDTO'
                codiceAziendaProprietario:
                    $ref: '#/components/schemas/AziendaDTO'
                codiceAziendaVenditore:
                    $ref: '#/components/schemas/AziendaDTO'
                codiceComuneArrivo:
                    $ref: '#/components/schemas/ComuneDTO'
                codiceComuneMittenteProvvisoria:
                    $ref: '#/components/schemas/ComuneDTO'
                codiceComunePartenza:
                    $ref: '#/components/schemas/ComuneDTO'
                codiceProvinciaMittenteProvvisoria:
                    $ref: '#/components/schemas/ProvinciaDTO'
                codiceTicket:
                    type: string
                codiceUtenteAccettazione:
                    $ref: '#/components/schemas/UtenteDTO'
                codiceUtenteOperazione:
                    $ref: '#/components/schemas/UtenteDTO'
                codiceVettoreArrivo:
                    $ref: '#/components/schemas/VettoreDTO'
                codiceVettorePartenza:
                    $ref: '#/components/schemas/VettoreDTO'
                cognomeTrasportatore:
                    type: string
                cognomeUtenteAccettazione:
                    type: string
                cognomeUtenteOperazione:
                    type: string
                croBonifico:
                    type: string
                dataConsegna:
                    format: date-time
                    type: string
                dataEmissioneDDT:
                    format: date-time
                    type: string
                dataOraAccettazione:
                    format: date-time
                    type: string
                dataOraInserimento:
                    format: date-time
                    type: string
                dataOraPagamento:
                    format: date-time
                    type: string
                dataPartenza:
                    format: date-time
                    type: string
                dettaglioArrivo:
                    type: string
                dettaglioPartenza:
                    type: string
                disponibilePerLaVendita:
                    type: boolean
                flagContrattoCompravenditaAcquirente:
                    type: boolean
                flagContrattoCompravenditaVenditore:
                    type: boolean
                id:
                    format: int32
                    type: integer
                idSedeDestinatario:
                    $ref: '#/components/schemas/SedeDTO'
                idSedeMittente:
                    $ref: '#/components/schemas/SedeDTO'
                idSedeProprietaria:
                    $ref: '#/components/schemas/Sede'
                idTicketSistemaTerzo:
                    type: string
                importoTicket:
                    type: number
                indirizzoArrivo:
                    type: string
                indirizzoMittenteProvvisorio:
                    type: string
                indirizzoPartenza:
                    type: string
                latitudineArrivo:
                    type: number
                localitaArrivo:
                    type: string
                localitaPartenza:
                    type: string
                longitudineArrivo:
                    type: number
                nomeTrasportatore:
                    type: string
                nomeUtenteAccettazione:
                    type: string
                nomeUtenteOperazione:
                    type: string
                noteOperativeDestinatario:
                    type: string
                noteOperativeMittente:
                    type: string
                numTelUtenteAccettazione:
                    type: string
                numTelUtenteOperazione:
                    type: string
                numeroDDT:
                    type: string
                otp:
                    type: string
                partitaIvaMittenteProvvisoria:
                    type: string
                partitaIvaVettoreArrivo:
                    type: string
                partitaIvaVettorePartenza:
                    type: string
                prezzoUnitarioIIIScelta:
                    type: number
                prezzoUnitarioIIScelta:
                    type: number
                prezzoUnitarioIScelta:
                    type: number
                prezzoUnitarioNuovo:
                    type: number
                qtaIIIScelta:
                    format: int32
                    type: integer
                qtaIIISceltaAccettata:
                    format: int32
                    type: integer
                qtaIIScelta:
                    format: int32
                    type: integer
                qtaIISceltaAccettata:
                    format: int32
                    type: integer
                qtaIScelta:
                    format: int32
                    type: integer
                qtaISceltaAccettata:
                    format: int32
                    type: integer
                qtaNuovo:
                    format: int32
                    type: integer
                qtaNuovoAccettata:
                    format: int32
                    type: integer
                ragioneSocialeVettoreArrivo:
                    type: string
                ragioneSocialeVettorePartenza:
                    type: string
                statoTicket:
                    type: string
                targaMezzo:
                    type: string
                targaRimorchio:
                    type: string
                telefonoTrasportatore:
                    type: string
                ticketProvvisorio:
                    type: boolean
                tipoPallet:
                    $ref: '#/components/schemas/TipoPalletDTO'
                tipoTicket:
                    type: string
                versione:
                    format: int64
                    type: integer
            type: object
        TicketResponse:
            properties:
                codeError:
                    format: int32
                    type: integer
                descError:
                    type: string
                dto:
                    $ref: '#/components/schemas/TicketDTO'
                first:
                    format: int32
                    type: integer
                list:
                    items:
                        $ref: '#/components/schemas/TicketDTO'
                    type: array
                page:
                    $ref: '#/components/schemas/PageDtoTicketDTO'
                pageNumber:
                    format: int32
                    type: integer
                totalPages:
                    format: int32
                    type: integer
                totalRecords:
                    format: int64
                    type: integer
            type: object
        TipoPallet:
            properties:
                descrizione:
                    type: string
                id:
                    format: int32
                    type: integer
                qtaMassima:
                    format: int32
                    type: integer
                ticketSet:
                    items:
                        $ref: '#/components/schemas/Ticket'
                    type: array
                    uniqueItems: true
            type: object
        TipoPalletDTO:
            properties:
                descrizione:
                    type: string
                id:
                    format: int32
                    type: integer
                qtaMassima:
                    format: int32
                    type: integer
            type: object
        TipoVettore:
            properties:
                descrizione:
                    type: string
                id:
                    format: int32
                    type: integer
            type: object
        TipoVettoreDTO:
            properties:
                descrizione:
                    type: string
                id:
                    format: int32
                    type: integer
            type: object
        Utente:
            properties:
                codiceAzienda:
                    $ref: '#/components/schemas/Azienda'
                cognome:
                    type: string
                dataNascita:
                    format: date-time
                    type: string
                email:
                    type: string
                id:
                    format: int64
                    type: integer
                idSede:
                    $ref: '#/components/schemas/Sede'
                nome:
                    type: string
                numeroTelefono:
                    type: string
                password:
                    type: string
                pinCode:
                    type: string
                prefisso:
                    type: string
                ruoliUtente:
                    items:
                        $ref: '#/components/schemas/RuoliUtente'
                    type: array
                    uniqueItems: true
                statoUtente:
                    type: string
                ticketUtenteAccettazione:
                    items:
                        $ref: '#/components/schemas/Ticket'
                    type: array
                    uniqueItems: true
                ticketUtenteOperazione:
                    items:
                        $ref: '#/components/schemas/Ticket'
                    type: array
                    uniqueItems: true
            type: object
        UtenteDTO:
            properties:
                codiceAzienda:
                    $ref: '#/components/schemas/AziendaDTO'
                cognome:
                    type: string
                dataNascita:
                    format: date-time
                    type: string
                email:
                    type: string
                id:
                    format: int64
                    type: integer
                idSede:
                    $ref: '#/components/schemas/SedeDTO'
                nome:
                    type: string
                numeroTelefono:
                    type: string
                password:
                    type: string
                pinCode:
                    type: string
                prefisso:
                    type: string
                statoUtente:
                    type: string
            type: object
        UtenteRequest:
            properties:
                first:
                    format: int32
                    type: integer
                pageNumber:
                    format: int32
                    type: integer
                recordPerPage:
                    format: int32
                    type: integer
                ruoli:
                    items:
                        $ref: '#/components/schemas/RuoloDTO'
                    type: array
                utente:
                    $ref: '#/components/schemas/UtenteDTO'
            type: object
        UtenteResponse:
            properties:
                codeError:
                    format: int32
                    type: integer
                descError:
                    type: string
                dto:
                    $ref: '#/components/schemas/UtenteDTO'
                first:
                    format: int32
                    type: integer
                list:
                    items:
                        $ref: '#/components/schemas/UtenteDTO'
                    type: array
                otp:
                    type: string
                pageNumber:
                    format: int32
                    type: integer
                ruoli:
                    items:
                        $ref: '#/components/schemas/RuoloDTO'
                    type: array
                totalPages:
                    format: int32
                    type: integer
                totalRecords:
                    format: int64
                    type: integer
                utente:
                    $ref: '#/components/schemas/UtenteDTO'
            type: object
        Vettore:
            properties:
                comune:
                    $ref: '#/components/schemas/Comune'
                id:
                    format: int32
                    type: integer
                nalboCTerzi:
                    type: string
                partitaIva:
                    type: string
                ragioneSociale:
                    type: string
                tipoVettore:
                    $ref: '#/components/schemas/TipoVettore'
            type: object
        VettoreDTO:
            properties:
                comune:
                    $ref: '#/components/schemas/ComuneDTO'
                id:
                    format: int32
                    type: integer
                nalboCTerzi:
                    type: string
                partitaIva:
                    type: string
                ragioneSociale:
                    type: string
                tipoVettore:
                    $ref: '#/components/schemas/TipoVettoreDTO'
            type: object
    securitySchemes:
        bearerAuth:
            bearerFormat: JWT
            scheme: bearer
            type: http
info:
    title: API Documentation
    version: "1.0"
openapi: 3.0.1
paths:
    /api/admin/aziende:
        post:
            description: Creates a new company and returns the details of the created company.
            operationId: save_7
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AziendaDTO'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AziendaDTO'
                    description: Company successfully created
                "400":
                    description: Invalid request
            summary: Create a new company
            tags:
                - Companies Controller
        put:
            description: Updates the details of an existing company.
            operationId: update_6
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AziendaDTO'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AziendaDTO'
                    description: Company successfully updated
                "404":
                    description: Company not found
            summary: Update an existing company
            tags:
                - Companies Controller
    /api/admin/aziende/{id}:
        delete:
            description: Deletes a company based on the provided ID.
            operationId: delete_4
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                "204":
                    description: Company successfully deleted
                "404":
                    description: Company not found
            summary: Delete a company
            tags:
                - Companies Controller
    /api/admin/register-rsut:
        post:
            operationId: registerRSUT
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RSUTDTO'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                type: string
                    description: OK
            tags:
                - rsut-controller
    /api/admin/ruoli:
        get:
            operationId: findAll_6
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                items:
                                    $ref: '#/components/schemas/RuoloDTO'
                                type: array
                    description: OK
            tags:
                - ruoli-controller
        post:
            operationId: save_6
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RuoloDTO'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/RuoloDTO'
                    description: OK
            tags:
                - ruoli-controller
        put:
            operationId: update_5
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RuoloDTO'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/RuoloDTO'
                    description: OK
            tags:
                - ruoli-controller
    /api/admin/ruoli/{id}:
        delete:
            operationId: delete_3
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    description: OK
            tags:
                - ruoli-controller
        get:
            operationId: findById_5
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/RuoloDTO'
                    description: OK
            tags:
                - ruoli-controller
    /api/admin/ruoli/hasuser/{id}:
        get:
            operationId: hasUser
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/RuoloResponse'
                    description: OK
            tags:
                - ruoli-controller
    /api/admin/ruoli/remove/roles/from/{idUser}:
        delete:
            operationId: removeRoleFromUser
            parameters:
                - in: path
                  name: idUser
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: header
                  name: rolesId
                  required: true
                  schema:
                    items:
                        format: int32
                        type: integer
                    type: array
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/RuoloResponse'
                    description: OK
            tags:
                - ruoli-controller
    /api/admin/ruoli/set/ruoli/user:
        post:
            operationId: setRuoliUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RuoloAssignedRequest'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/RuoloAssignedResponse'
                    description: OK
            tags:
                - ruoli-controller
    /api/admin/utentis:
        get:
            operationId: findAll_5
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                items:
                                    $ref: '#/components/schemas/UtenteDTO'
                                type: array
                    description: OK
            tags:
                - utenti-controller
        post:
            operationId: save_5
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RuoloAssignedRequest'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/RuoloAssignedRequest'
                    description: OK
            tags:
                - utenti-controller
        put:
            operationId: update_4
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RuoloAssignedRequest'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/RuoloAssignedRequest'
                    description: OK
            tags:
                - utenti-controller
    /api/admin/utentis/{id}:
        get:
            operationId: findById_4
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/UtenteResponse'
                    description: OK
            tags:
                - utenti-controller
    /api/admin/utentis/find/by/azienda/{idAzienda}/{start}/{max}:
        get:
            operationId: findByAzienda
            parameters:
                - in: path
                  name: idAzienda
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoRuoliUtenteDTO'
                    description: OK
            tags:
                - utenti-controller
    /api/admin/utentis/find/by/azienda/{idAzienda}/{word}/{start}/{max}:
        get:
            operationId: findByFilter_2
            parameters:
                - in: path
                  name: word
                  required: true
                  schema:
                    type: string
                - in: path
                  name: idAzienda
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoRuoliUtenteDTO'
                    description: OK
            tags:
                - utenti-controller
    /api/admin/utentis/find/by/filter:
        post:
            operationId: findByFilter
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UtenteRequest'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/UtenteResponse'
                    description: OK
            tags:
                - utenti-controller
    /api/admin/utentis/find/by/filter/{word}:
        get:
            operationId: findByFilter_1
            parameters:
                - in: path
                  name: word
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                items:
                                    $ref: '#/components/schemas/UtenteDTO'
                                type: array
                    description: OK
            tags:
                - utenti-controller
    /api/admin/utentis/save/sede/{idUtente}/{idSede}:
        post:
            operationId: saveSede
            parameters:
                - in: path
                  name: idUtente
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: idSede
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/UtenteDTO'
                    description: OK
            tags:
                - utenti-controller
    /api/admin/utentis/update/sede/{idUtente}/{idSede}:
        put:
            operationId: updateSede_1
            parameters:
                - in: path
                  name: idUtente
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: idSede
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/UtenteDTO'
                    description: OK
            tags:
                - utenti-controller
    /api/auth/change-password:
        post:
            description: Permette all'utente autenticato di cambiare la propria password
            operationId: changePassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ChangePasswordRequest'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                type: string
                    description: OK
            summary: Cambia la password dell'utente autenticato
            tags:
                - Authentication
    /api/auth/change-pin:
        post:
            description: Permette all'utente autenticato di cambiare la propria password
            operationId: changePin
            parameters:
                - in: header
                  name: username
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NewPinRequest'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/NewPinResponse'
                    description: OK
            summary: Cambia il pin dell'utente autenticato
            tags:
                - Authentication
    /api/auth/change-pin/verify-otp:
        get:
            operationId: verifyOtpOnChangePin
            parameters:
                - in: header
                  name: username
                  required: true
                  schema:
                    type: string
                - in: header
                  name: x-otp
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/UtenteResponse'
                    description: OK
            tags:
                - Authentication
    /api/auth/exists/{username}:
        get:
            description: Checks if a user exists by first checking the Redis cache, then falling back to the SQL database if necessary.
            operationId: checkUserExists
            parameters:
                - in: path
                  name: username
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/UtenteDTO'
                    description: User found
                "404":
                    content:
                        '*/*':
                            schema:
                                type: string
                    description: User not found
            summary: Check if User Exists
            tags:
                - Authentication
    /api/auth/login:
        post:
            description: Authenticate user with username and password to obtain a JWT token.
            operationId: login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AuthRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: string
                    description: Login successful, returns JWT token
                "401":
                    content:
                        application/json: {}
                    description: Unauthorized, invalid credentials
                "428":
                    content:
                        application/json: {}
                    description: Precondition required. Complete registration with password and PIN
            summary: User Login
            tags:
                - Authentication
    /api/auth/loginOneShot:
        post:
            operationId: loginOneShot
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AuthRequest'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/UtenteResponse'
                    description: OK
            tags:
                - Authentication
    /api/auth/logout:
        post:
            description: Logs out the user by invalidating the JWT token and clearing the security context.
            operationId: logout
            parameters:
                - in: header
                  name: Authorization
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                type: string
                    description: Logout successful
                "400":
                    content:
                        '*/*':
                            schema:
                                type: string
                    description: Invalid or missing token
            summary: Logout
            tags:
                - Authentication
    /api/auth/recover-password:
        post:
            description: Inizia il processo di recupero password inviando un token di verifica all'utente
            operationId: recoverPassword
            parameters:
                - in: header
                  name: username
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RecoverPasswordRequest'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/RecoverPasswordResponse'
                    description: OK
            summary: Recupero password
            tags:
                - Authentication
    /api/auth/recover-password/verify-otp:
        get:
            operationId: recoverPasswordOtp
            parameters:
                - in: header
                  name: username
                  required: true
                  schema:
                    type: string
                - in: header
                  name: otp
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/RecoverPasswordResponse'
                    description: OK
            tags:
                - Authentication
    /api/auth/recover-pin:
        post:
            description: Generates an OTP and caches it for the given username to recover the PIN.
            operationId: recoverPin
            parameters:
                - in: header
                  name: username
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NewPinRequest'
                description: Request body containing the new PIN
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/NewPinResponse'
                    description: OTP sent successfully
            summary: Initiate PIN recovery
            tags:
                - Authentication
    /api/auth/recover-pin/verify-otp:
        get:
            description: Checks the provided OTP for the given username and completes the PIN recovery process if valid.
            operationId: recoverPinOtp
            parameters:
                - in: header
                  name: username
                  required: true
                  schema:
                    type: string
                - in: header
                  name: otp
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/NewPinResponse'
                    description: PIN recovered successfully
                "400":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/NewPinResponse'
                    description: Invalid or expired OTP
            summary: Verify OTP and recover PIN
            tags:
                - Authentication
    /api/auth/register:
        post:
            description: Registers a new user using their phone number. If the phone number is already registered, a conflict response is returned.
            operationId: registerUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterRequest'
                required: true
            responses:
                "201":
                    content:
                        application/json: {}
                    description: User registered successfully, proceed with setting password and PIN
                "400":
                    content:
                        application/json: {}
                    description: Invalid input data
                "409":
                    content:
                        application/json: {}
                    description: Phone number already registered
            summary: Register User
            tags:
                - Authentication
    /api/auth/reinvia-login-otp/{username}:
        get:
            operationId: rinvioOtp
            parameters:
                - in: path
                  name: username
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                type: string
                    description: OK
            tags:
                - Authentication
    /api/auth/reset-password:
        post:
            description: Permette all'utente di resettare la password utilizzando il token di recupero
            operationId: resetPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ResetPasswordRequest'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                type: string
                    description: OK
            summary: Resetta la password
            tags:
                - Authentication
    /api/auth/set-password-pin:
        post:
            description: Endpoint che imposta la password e il PIN dell'utente. Se l'OTP non Ã¨ fornito, ne genera uno e lo invia via SMS. Se l'OTP Ã¨ fornito, verifica l'OTP e imposta password e PIN.
            operationId: setPasswordAndPin
            parameters:
                - description: OTP ricevuto dall'utente per la verifica
                  in: query
                  name: otp
                  required: false
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterRequest'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/RegisterResponse'
                    description: Password e PIN impostati correttamente, oppure OTP generato e inviato via SMS
                "400":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                    description: OTP non valido o scaduto
            summary: Imposta la password e il PIN o invia un OTP
            tags:
                - Authentication
    /api/aziende:
        get:
            description: Returns a list of all companies.
            operationId: findAll_4
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AziendaDTO'
                    description: List of companies successfully returned
            summary: Find all companies
            tags:
                - aziende-read-only-controller
    /api/aziende/{id}:
        get:
            description: Returns the details of a company specified by the ID.
            operationId: findById_3
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AziendaDTO'
                    description: Company found
                "404":
                    description: Company not found
            summary: Find a company by ID
            tags:
                - aziende-read-only-controller
    /api/aziende/create/qrcode/{partitaIva}:
        get:
            operationId: generateQRCode
            parameters:
                - in: path
                  name: partitaIva
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        image/png:
                            schema:
                                items:
                                    format: byte
                                    type: string
                                type: array
                    description: OK
            tags:
                - aziende-read-only-controller
    /api/aziende/find/by/{partitaIva}:
        get:
            operationId: findByPartitaIva
            parameters:
                - in: path
                  name: partitaIva
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/AziendaDTO'
                    description: OK
            tags:
                - aziende-read-only-controller
    /api/aziende/paginated:
        get:
            description: Returns a paginated list of companies.
            operationId: findAllPaginated
            parameters:
                - in: query
                  name: pageable
                  required: true
                  schema:
                    $ref: '#/components/schemas/Pageable'
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoAziendaDTO'
                    description: Paginated list of companies successfully returned
            summary: Find paginated companies
            tags:
                - aziende-read-only-controller
    /api/aziende/read/qrcode:
        post:
            operationId: readQRCode
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                file:
                                    format: binary
                                    type: string
                            required:
                                - file
                            type: object
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                type: string
                    description: OK
            tags:
                - aziende-read-only-controller
    /api/myself/verify-pin:
        post:
            description: Verify if the provided pin code matches the one stored for the user.
            operationId: verifyPinCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PinCodeVerificationRequest'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PinCodeVerificationResponse'
                    description: Pin Code verified successfully
                "400":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PinCodeVerificationResponse'
                    description: Invalid Pin Code or request data
                "404":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PinCodeVerificationResponse'
                    description: User not found
                "500":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PinCodeVerificationResponse'
                    description: Internal server error
            summary: Verify Pin Code
            tags:
                - pin-utenti-controller
    /api/otp/resend/{username}:
        get:
            operationId: reinvioOTP_1
            parameters:
                - description: Phone number
                  in: path
                  name: username
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                    description: OK
            tags:
                - otp-controller
    /api/sedi:
        post:
            operationId: createSede
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SedeDTO'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/SedeDTO'
                    description: OK
            tags:
                - sedi-controller
    /api/sedi/{id}:
        delete:
            operationId: deleteSede
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    description: OK
            tags:
                - sedi-controller
        get:
            operationId: getSedeById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/SedeDTO'
                    description: OK
            tags:
                - sedi-controller
        put:
            operationId: updateSede
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int32
                    type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SedeDTO'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/SedeDTO'
                    description: OK
            tags:
                - sedi-controller
    /api/sedi/{start}/{max}:
        get:
            operationId: getAllSedi
            parameters:
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoSedeDTO'
                    description: OK
            tags:
                - sedi-controller
    /api/sedi/find/by/domain/azienda/{idAzienda}:
        get:
            operationId: findByIdAziend
            parameters:
                - in: path
                  name: idAzienda
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                items:
                                    $ref: '#/components/schemas/SedeDTO'
                                type: array
                    description: OK
            tags:
                - sedi-controller
    /api/tickets:
        get:
            description: Recupera una lista di tutti i ticket disponibili.
            operationId: findAll_3
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                items:
                                    $ref: '#/components/schemas/TicketDTO'
                                type: array
                    description: Lista dei ticket recuperata con successo
            summary: Trova tutti i ticket
            tags:
                - tickets-controller
        post:
            description: Crea un nuovo ticket e invia un OTP al numero di telefono del trasportatore.
            operationId: save_3
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TicketDTO'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/TicketDTO'
                    description: Ticket creato e OTP inviato con successo
                "400":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/TicketDTO'
                    description: Richiesta non valida
            summary: Crea un nuovo ticket
            tags:
                - tickets-controller
        put:
            description: Aggiorna un ticket esistente.
            operationId: update_3
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TicketDTO'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/TicketDTO'
                    description: Ticket aggiornato con successo
            summary: Aggiorna un ticket
            tags:
                - tickets-controller
    /api/tickets/compravendite:
        post:
            description: Save a new Compravendita entity and optionally send an OTP to the owner's phone number.
            operationId: save_4
            parameters:
                - in: header
                  name: tel-proprietario
                  required: false
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CompravenditaDTO'
                description: Details of the Compravendita to save
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/CompravenditaResponse'
                    description: Compravendita saved successfully
                "400":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/CompravenditaResponse'
                    description: 'Bad request: DTO is null'
            summary: Save a Compravendita
            tags:
                - compravendite-controller
    /api/tickets/compravendite/{aziendaInserimento}/{aziendaAcquirente}/{aziendaVenditore}/{start}/{max}:
        get:
            description: Get a paginated list of compravendite filtered by the provided aziende parameters
            operationId: getCompravendite
            parameters:
                - description: ID of the azienda that inserted the compravendita
                  example: 1
                  in: path
                  name: aziendaInserimento
                  required: true
                  schema:
                    format: int32
                    type: integer
                - description: ID of the azienda that acquired the compravendita
                  example: 2
                  in: path
                  name: aziendaAcquirente
                  required: true
                  schema:
                    format: int32
                    type: integer
                - description: ID of the azienda that sold the compravendita
                  example: 3
                  in: path
                  name: aziendaVenditore
                  required: true
                  schema:
                    format: int32
                    type: integer
                - description: Page number for pagination
                  example: first page=0
                  in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - description: Maximum number of results per page
                  example: 10
                  in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CompravenditaResponse'
                    description: Successful retrieval of compravendite
                "400":
                    content:
                        application/json: {}
                    description: Invalid input parameters
                "404":
                    content:
                        application/json: {}
                    description: Compravendite not found
                "500":
                    content:
                        application/json: {}
                    description: Internal server error
            summary: Retrieve list of compravendite
            tags:
                - compravendite-controller
    /api/tickets/compravendite/{aziendaInserimento}/conacquirente/{aziendaAcquirente}/{start}/{max}:
        get:
            operationId: getCompravenditeConAcquirente
            parameters:
                - in: path
                  name: aziendaInserimento
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: aziendaAcquirente
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoCompravenditaDTO'
                    description: OK
            tags:
                - compravendite-controller
    /api/tickets/compravendite/{aziendaInserimento}/convenditore/{aziendaVenditore}/{start}/{max}:
        get:
            operationId: getCompravenditeConVenditore
            parameters:
                - in: path
                  name: aziendaInserimento
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: aziendaVenditore
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoCompravenditaDTO'
                    description: OK
            tags:
                - compravendite-controller
    /api/tickets/compravendite/finalizza:
        post:
            operationId: finalizzaCompravendita
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CompravenditaDTO'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/CompravenditaResponse'
                    description: OK
            tags:
                - compravendite-controller
    /api/tickets/compravendite/find/acquistati/by/azienda/{codiceAziendaAcquirente}/{start}/{max}:
        get:
            operationId: findAcquistatiByAziendaAcquirente
            parameters:
                - in: path
                  name: codiceAziendaAcquirente
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: header
                  name: from
                  required: true
                  schema:
                    format: date-time
                    type: string
                - in: header
                  name: to
                  required: true
                  schema:
                    format: date-time
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoCompravenditaDTO'
                    description: OK
            tags:
                - compravendite-controller
    /api/tickets/compravendite/find/venduti/by/azienda/{codiceAziendaVenditore}/{start}/{max}:
        get:
            operationId: findVendutiByAziendaVenditore
            parameters:
                - in: path
                  name: codiceAziendaVenditore
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: header
                  name: from
                  required: true
                  schema:
                    format: date-time
                    type: string
                - in: header
                  name: to
                  required: true
                  schema:
                    format: date-time
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoCompravenditaDTO'
                    description: OK
            tags:
                - compravendite-controller
    /api/tickets/compravendite/otp/verify:
        post:
            operationId: getMethodName
            parameters:
                - in: header
                  name: tel-proprietario
                  required: true
                  schema:
                    type: string
                - in: header
                  name: x-otp
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/CompravenditaDTO'
                    description: OK
            tags:
                - compravendite-controller
    /api/tickets/compravendite/proposte/acquisto/inviate/{codiceAzienda}/{start}/{max}:
        get:
            operationId: findProposteDiAcquistoInviate
            parameters:
                - in: path
                  name: codiceAzienda
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: header
                  name: X-data-ins-order
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoCompravenditaDTO'
                    description: OK
            tags:
                - compravendite-controller
    /api/tickets/compravendite/proposte/acquisto/ricevute/{codiceAzienda}/{start}/{max}:
        get:
            operationId: findProposteDiAcquistoRicevute
            parameters:
                - in: path
                  name: codiceAzienda
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: header
                  name: X-data-ins-order
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoCompravenditaDTO'
                    description: OK
            tags:
                - compravendite-controller
    /api/tickets/compravendite/proposte/vendita/inviate/{codiceAzienda}/{start}/{max}:
        get:
            operationId: findProposteDiVenditaInviate
            parameters:
                - in: path
                  name: codiceAzienda
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: header
                  name: X-data-ins-order
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoCompravenditaDTO'
                    description: OK
            tags:
                - compravendite-controller
    /api/tickets/compravendite/proposte/vendita/ricevute/{codiceAzienda}/{start}/{max}:
        get:
            operationId: findProposteDiVenditaRicevute
            parameters:
                - in: path
                  name: codiceAzienda
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: header
                  name: X-data-ins-order
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoCompravenditaDTO'
                    description: OK
            tags:
                - compravendite-controller
    /api/tickets/compravendite/rifiutate/{codiceTicket}:
        put:
            operationId: rifiutaCompravendite
            parameters:
                - in: path
                  name: codiceTicket
                  required: true
                  schema:
                    type: string
                - in: header
                  name: x-stati-ticket
                  required: true
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/CompravenditaResponse'
                    description: OK
            tags:
                - compravendite-controller
    /api/tickets/convalida/ticket/{id}/{telefono}/{otp}:
        post:
            description: Convalida un ticket tramite OTP e aggiorna il suo stato.
            operationId: convalidaTicket
            parameters:
                - description: ID del ticket
                  in: path
                  name: id
                  required: true
                  schema:
                    format: int32
                    type: integer
                - description: OTP per la convalida
                  in: path
                  name: otp
                  required: true
                  schema:
                    type: string
                - description: Numero di telefono per l'OTP
                  in: path
                  name: telefono
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/TicketResponse'
                    description: Ticket convalidato con successo
                "400":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/TicketResponse'
                    description: OTP non valido o scaduto
                "404":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/TicketResponse'
                    description: Ticket non trovato
            summary: Convalida Ticket
            tags:
                - tickets-controller
    /api/tickets/dettaglio/{codiceTicket}:
        get:
            description: Recupera i dettagli di un ticket specifico tramite il suo codice.
            operationId: dettaglioTicket
            parameters:
                - description: Codice del ticket
                  in: path
                  name: codiceTicket
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/TicketDTO'
                    description: Dettagli del ticket recuperati con successo
                "404":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/TicketDTO'
                    description: Ticket non trovato
            summary: Dettaglio Ticket
            tags:
                - tickets-controller
    /api/tickets/emessi/daconvalidare/{codiceUtenteOperazione}/{idSede}/{start}/{max}:
        post:
            description: Recupera i ticket emessi da convalidare per un determinato utente.
            operationId: emessiDaConvalidare_1
            parameters:
                - description: Username dell'utente
                  in: path
                  name: codiceUtenteOperazione
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: idSede
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: header
                  name: X-data-ins-order
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoTicketDTO'
                    description: Lista dei ticket trovata con successo
                "400":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoTicketDTO'
                    description: Username non trovato
            summary: Trova i ticket emessi da convalidare
            tags:
                - tickets-controller
    /api/tickets/emessi/daconvalidare/{codiceUtenteOperazione}/{start}/{max}:
        post:
            description: Recupera i ticket emessi da convalidare per un determinato utente.
            operationId: emessiDaConvalidare
            parameters:
                - description: Username dell'utente
                  in: path
                  name: codiceUtenteOperazione
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: header
                  name: X-data-ins-order
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoTicketDTO'
                    description: Lista dei ticket trovata con successo
                "400":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoTicketDTO'
                    description: Username non trovato
            summary: Trova i ticket emessi da convalidare
            tags:
                - tickets-controller
    /api/tickets/estrai/convalidati/azienda/{idAzienda}/{idSede}/inserimento/{start}/{max}:
        post:
            description: Estrae i ticket convalidati per una determinata azienda. Il valore di default per l'header 'x-stato-ticket' Ã¨ 'C'.
            operationId: estraiConvalidatiByIdAziendaInserimento
            parameters:
                - description: ID dell'azienda
                  in: path
                  name: idAzienda
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: idSede
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: header
                  name: x-stato-ticket
                  required: true
                  schema:
                    type: string
                - in: header
                  name: X-data-ins-order
                  required: false
                  schema:
                    type: string
                - in: header
                  name: tipiTicket
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoTicketDTO'
                    description: Ticket estratti con successo
            summary: Estrai ticket convalidati per azienda che ha inserito
            tags:
                - tickets-controller
    /api/tickets/estrai/convalidati/azienda/{idAzienda}/{idSede}/proprietaria/{start}/{max}:
        post:
            description: Estrae i ticket convalidati per una determinata azienda.Il valore di default per l'header 'x-stato-ticket' Ã¨ 'C'.
            operationId: estraiConvalidatiByIdAziendaProprietaria
            parameters:
                - description: ID dell'azienda
                  in: path
                  name: idAzienda
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: idSede
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: header
                  name: X-data-ins-order
                  required: false
                  schema:
                    type: string
                - in: header
                  name: x-stato-ticket
                  required: false
                  schema:
                    type: string
                - in: header
                  name: tipiTicket
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoTicketDTO'
                    description: Ticket estratti con successo
            summary: Estrai ticket convalidati per azienda proprietaria
            tags:
                - tickets-controller
    /api/tickets/estrai/convalidati/azienda/{idAzienda}/inserimento/{start}/{max}:
        post:
            description: Estrae i ticket convalidati per una determinata azienda. Il valore di default per l'header 'x-stato-ticket' Ã¨ 'C'.
            operationId: estraiConvalidatiByIdAziendaInserimento_1
            parameters:
                - description: ID dell'azienda
                  in: path
                  name: idAzienda
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: header
                  name: x-stato-ticket
                  required: true
                  schema:
                    type: string
                - in: header
                  name: X-data-ins-order
                  required: false
                  schema:
                    type: string
                - in: header
                  name: tipiTicket
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoTicketDTO'
                    description: Ticket estratti con successo
            summary: Estrai ticket convalidati per azienda che ha inserito
            tags:
                - tickets-controller
    /api/tickets/estrai/convalidati/azienda/{idAzienda}/proprietaria/{start}/{max}:
        post:
            operationId: estraiConvalidatiByIdAziendaProprietaria_1
            parameters:
                - description: ID dell'azienda
                  in: path
                  name: idAzienda
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: header
                  name: X-data-ins-order
                  required: false
                  schema:
                    type: string
                - in: header
                  name: x-stato-ticket
                  required: false
                  schema:
                    type: string
                - in: header
                  name: tipiTicket
                  required: false
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoTicketDTO'
                    description: Ticket estratti con successo
            tags:
                - tickets-controller
    /api/tickets/find/chiusi/by/azienda/{codiceAziendaProprietario}/{start}/{max}:
        get:
            operationId: findChiusiByAziendaProprietario
            parameters:
                - in: path
                  name: codiceAziendaProprietario
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: header
                  name: from
                  required: true
                  schema:
                    format: date-time
                    type: string
                - in: header
                  name: to
                  required: true
                  schema:
                    format: date-time
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoTicketDTO'
                    description: OK
            tags:
                - tickets-controller
    /api/tickets/find/emessi/by/azienda/{codiceAziendaDestinatario}/{start}/{max}:
        get:
            operationId: findLatestByDestinatarioAndAcceptanceDate
            parameters:
                - in: path
                  name: codiceAziendaDestinatario
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: header
                  name: from
                  required: true
                  schema:
                    format: date-time
                    type: string
                - in: header
                  name: to
                  required: true
                  schema:
                    format: date-time
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoTicketDTO'
                    description: OK
            tags:
                - tickets-controller
    /api/tickets/find/propri/invendita/{codAziendaProp}/{start}/{max}:
        get:
            operationId: findTicketPropriInVendita
            parameters:
                - in: query
                  name: lat
                  required: true
                  schema:
                    type: number
                - in: query
                  name: lon
                  required: true
                  schema:
                    type: number
                - in: path
                  name: codAziendaProp
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoSedeTicketInfoDTO'
                    description: OK
            tags:
                - tickets-controller
    /api/tickets/find/propri/invendita/details/{codAziendaProp}/{idSede}/{start}/{max}:
        get:
            operationId: findTicketPropriInVenditaDetails
            parameters:
                - in: path
                  name: codAziendaProp
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: idSede
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoTicketDTO'
                    description: OK
            tags:
                - tickets-controller
    /api/tickets/find/ricevuti/by/azienda/{codiceAziendaMittente}/{start}/{max}:
        get:
            operationId: findLatestByMittenteAndAcceptanceDate
            parameters:
                - in: path
                  name: codiceAziendaMittente
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: header
                  name: from
                  required: true
                  schema:
                    format: date-time
                    type: string
                - in: header
                  name: to
                  required: true
                  schema:
                    format: date-time
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoTicketDTO'
                    description: OK
            tags:
                - tickets-controller
    /api/tickets/find/terzi/invendita/{codAziendaProp}/{start}/{max}:
        get:
            operationId: findTicketTerziInVendita
            parameters:
                - in: query
                  name: lat
                  required: true
                  schema:
                    type: number
                - in: query
                  name: lon
                  required: true
                  schema:
                    type: number
                - in: path
                  name: codAziendaProp
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoSedeTicketInfoDTO'
                    description: OK
            tags:
                - tickets-controller
    /api/tickets/find/terzi/invendita/details/{codAziendaProp}/{idSede}/{start}/{max}:
        get:
            operationId: findTicketTerziInVenditaDetails
            parameters:
                - in: path
                  name: codAziendaProp
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: idSede
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoTicketDTO'
                    description: OK
            tags:
                - tickets-controller
    /api/tickets/opm/{idUtente}/{idTicket}/{idAzienda}/{start}/{max}:
        get:
            operationId: getTicketOPM
            parameters:
                - in: path
                  name: idUtente
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: idAzienda
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoTicketDTO'
                    description: OK
            tags:
                - tickets-controller
    /api/tickets/redisTest:
        get:
            operationId: redisTest
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                items:
                                    $ref: '#/components/schemas/TicketDTO'
                                type: array
                    description: OK
            tags:
                - tickets-controller
    /api/tickets/reinviootp/{idTicket}:
        get:
            description: Reinvia un OTP al numero di telefono del trasportatore per un ticket specifico.
            operationId: reinvioOTP
            parameters:
                - description: ID del ticket
                  in: path
                  name: idTicket
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/TicketResponse'
                    description: OTP reinviato con successo
                "404":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/TicketResponse'
                    description: Ticket non trovato
            summary: Reinvia OTP
            tags:
                - tickets-controller
    /api/tickets/upload:
        post:
            operationId: uploadTickets
            parameters:
                - in: query
                  name: file
                  required: true
                  schema:
                    format: binary
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                type: string
                    description: OK
            tags:
                - tickets-controller
    /comuni:
        post:
            operationId: createComune
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ComuneDTO'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/ComuneDTO'
                    description: OK
            tags:
                - comuni-controller
    /comuni/{id}:
        get:
            operationId: getComune
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/ComuneDTO'
                    description: OK
            tags:
                - comuni-controller
        put:
            operationId: updateComune
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int32
                    type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ComuneDTO'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/ComuneDTO'
                    description: OK
            tags:
                - comuni-controller
    /comuni/{start}/{max}:
        get:
            operationId: getAllComuni
            parameters:
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoComuneDTO'
                    description: OK
            tags:
                - comuni-controller
    /comuni/search/{name}:
        get:
            operationId: searchComuniByNome
            parameters:
                - in: path
                  name: name
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                items:
                                    $ref: '#/components/schemas/ComuneDTO'
                                type: array
                    description: OK
            tags:
                - comuni-controller
    /comuni/search/by/provincia/{idProvincia}/{start}/{max}:
        get:
            operationId: getAllComuni_1
            parameters:
                - in: path
                  name: idProvincia
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/PageDtoComuneDTO'
                    description: OK
            tags:
                - comuni-controller
    /nazionis:
        get:
            operationId: findAll_2
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                items:
                                    $ref: '#/components/schemas/NazioneDTO'
                                type: array
                    description: OK
            tags:
                - nazioni-controller
        post:
            operationId: save_2
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NazioneDTO'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/NazioneDTO'
                    description: OK
            tags:
                - nazioni-controller
        put:
            operationId: update_2
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NazioneDTO'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/NazioneDTO'
                    description: OK
            tags:
                - nazioni-controller
    /nazionis/{id}:
        delete:
            operationId: delete_2
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    description: OK
            tags:
                - nazioni-controller
        get:
            operationId: findById_2
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/NazioneDTO'
                    description: OK
            tags:
                - nazioni-controller
    /nazionis/find/by/{descrizione}:
        get:
            operationId: findByDescrizione
            parameters:
                - in: path
                  name: descrizione
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                items:
                                    $ref: '#/components/schemas/NazioneDTO'
                                type: array
                    description: OK
            tags:
                - nazioni-controller
    /provinces:
        get:
            operationId: findAll_1
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                items:
                                    $ref: '#/components/schemas/ProvinciaDTO'
                                type: array
                    description: OK
            tags:
                - province-controller
        post:
            operationId: save_1
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProvinciaDTO'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/ProvinciaDTO'
                    description: OK
            tags:
                - province-controller
        put:
            operationId: update_1
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProvinciaDTO'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/ProvinciaDTO'
                    description: OK
            tags:
                - province-controller
    /provinces/{id}:
        delete:
            operationId: delete_1
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    description: OK
            tags:
                - province-controller
        get:
            operationId: findById_1
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/ProvinciaDTO'
                    description: OK
            tags:
                - province-controller
    /tipipallet:
        get:
            operationId: findAll
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                items:
                                    $ref: '#/components/schemas/TipoPalletDTO'
                                type: array
                    description: OK
            tags:
                - tipi-pallet-controller
        post:
            operationId: save
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TipoPalletDTO'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/TipoPalletDTO'
                    description: OK
            tags:
                - tipi-pallet-controller
        put:
            operationId: update
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TipoPalletDTO'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/TipoPalletDTO'
                    description: OK
            tags:
                - tipi-pallet-controller
    /tipipallet/{id}:
        delete:
            operationId: delete
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    description: OK
            tags:
                - tipi-pallet-controller
        get:
            operationId: findById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/TipoPalletDTO'
                    description: OK
            tags:
                - tipi-pallet-controller
    /tipivettori:
        get:
            operationId: getAllTipiVettore
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                items:
                                    $ref: '#/components/schemas/TipoVettoreDTO'
                                type: array
                    description: OK
            tags:
                - tipi-vettore-controller
        post:
            operationId: createTipoVettore
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TipoVettoreDTO'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/TipoVettoreDTO'
                    description: OK
            tags:
                - tipi-vettore-controller
    /tipivettori/{id}:
        delete:
            operationId: deleteTipoVettore
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    description: OK
            tags:
                - tipi-vettore-controller
        get:
            operationId: getTipoVettore
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/TipoVettoreDTO'
                    description: OK
            tags:
                - tipi-vettore-controller
        put:
            operationId: updateTipoVettore
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int32
                    type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TipoVettoreDTO'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/TipoVettoreDTO'
                    description: OK
            tags:
                - tipi-vettore-controller
    /vettori:
        get:
            operationId: getAllVettori
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                items:
                                    $ref: '#/components/schemas/VettoreDTO'
                                type: array
                    description: OK
            tags:
                - vettori-controller
        post:
            operationId: createVettore
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VettoreDTO'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/VettoreDTO'
                    description: OK
            tags:
                - vettori-controller
    /vettori/{id}:
        delete:
            operationId: deleteVettore
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    description: OK
            tags:
                - vettori-controller
        get:
            operationId: getVettore
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/VettoreDTO'
                    description: OK
            tags:
                - vettori-controller
        put:
            operationId: updateVettore
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    format: int32
                    type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VettoreDTO'
                required: true
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                $ref: '#/components/schemas/VettoreDTO'
                    description: OK
            tags:
                - vettori-controller
    /vettori/ordered/{start}/{max}:
        get:
            operationId: getVettoriPaged
            parameters:
                - in: path
                  name: start
                  required: true
                  schema:
                    format: int32
                    type: integer
                - in: path
                  name: max
                  required: true
                  schema:
                    format: int32
                    type: integer
            responses:
                "200":
                    content:
                        '*/*':
                            schema:
                                items:
                                    $ref: '#/components/schemas/VettoreDTO'
                                type: array
                    description: OK
            tags:
                - vettori-controller
security:
    - bearerAuth: []
servers:
    - description: Generated server url
      url: http://localhost:8082
tags:
    - description: Endpoints related to user authentication and login
      name: Authentication
    - description: Management of companies
      name: Companies Controller
